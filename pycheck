#! /bin/sh
# pycheck - Run Ruff and Pyright with uv to format, lint, and type-check
# standalone Python scripts.
#
# Copyright (c) 2024 D. Bohdan.
# License: MIT.
# See https://github.com/dbohdan/pycheck for more information.
#
# Requires `uv` to be available.

python_target_version=3.10
version=0.1.0

help() {
    cat <<EOF
Usage: $(basename "$0") [-h] [-V] [-t <version>] [file ...]

Options:
  -t, --target-version <version>
          The target version of Python (default: '$python_target_version')
EOF
}

for arg in "$@"; do
    case "$arg" in
    -h | --help)
        help
        exit 0
        ;;
    -t | --target-version)
        shift
        python_target_version=$1
        shift
        ;;
    -V | --version)
        printf '%s\n' "$version"
        exit 0
        ;;
    -*)
        printf 'unknown option: %s\n' "$arg" >&2
        exit 2
        ;;
    *)
        break
        ;;
    esac
done

exit_status=0
python_target_version_ruff=py$(printf '%s\n' "$python_target_version" | sed 's|\.||')

uv tool run ruff format \
    --no-cache \
    --target-version "$python_target_version_ruff" \
    "$@" \
    ;
exit_status=$((exit_status + $?))

uv tool run ruff check \
    --fix \
    --ignore ANN,D,EXE003,S101,S310,S603,S607,T201,PT \
    --no-cache \
    --select ALL \
    --target-version "$python_target_version_ruff" \
    --unsafe-fixes \
    "$@" \
    ;
exit_status=$((exit_status + $?))

uv tool run pyright \
    --pythonversion "$python_target_version" \
    "$@" \
    ;
exit_status=$((exit_status + $?))

exit "$exit_status"
