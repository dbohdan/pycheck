#! /bin/sh
# pycheck - Run Ruff and Pyright with uv to format, lint, and type-check
# standalone Python scripts.
#
# Copyright (c) 2024 D. Bohdan.
# License: MIT.
# See https://github.com/dbohdan/pycheck for more information.
#
# Requires `uv` to be available.

help() {
    cat <<EOF
Usage: $(basename "$0") [-h] [-V] [-f] [-i <rules>] [-t <version>] [-u] file [file ...]

Options:
  -h, --help
          Print this help message and exit

  -V, --version
          Print version number and exit

  -f, --fix
          Apply Ruff Linter fixes

  -i, --ignore <rules>
          Ruff Linter rules to ignore (default: '$ignore_option')

  -t, --target-version <version>
          The target version of Python (default: '$target_version_option')

  -u, --unsafe-fixes
          Apply unsafe Ruff Linter fixes
EOF
}

fix_option=
ignore_option=ANN,D,EXE003,PT,S101,S310,S603,S607,T201
target_version_option=3.10
unsafe_fixes_option=
version=0.2.0

for arg in "$@"; do
    case "$arg" in
    -f | --fix)
        fix_option=--fix
        shift
        ;;
    -h | --help)
        help
        exit 0
        ;;
    -i | --ignore)
        shift
        ignore_option=$1
        shift
        ;;
    -t | --target-version)
        shift
        target_version_option=$1
        shift
        ;;
    -u | --unsafe-fixes)
        unsafe_fixes_option=--unsafe-fixes
        shift
        ;;
    -V | --version)
        printf '%s\n' "$version"
        exit 0
        ;;
    -*)
        printf 'unknown option: %s\n' "$arg" >&2
        exit 2
        ;;
    *)
        break
        ;;
    esac
done

if [ $# -eq 0 ]; then
    printf 'no files given\n' >&2
    exit 2
fi

exit_status=0
target_version_option_ruff=py$(printf '%s\n' "$target_version_option" | sed 's|\.||')

uv tool run ruff format \
    --no-cache \
    --target-version "$target_version_option_ruff" \
    "$@" \
    ;
exit_status=$((exit_status + $?))

uv tool run ruff check \
    $fix_option \
    --ignore "$ignore_option" \
    --no-cache \
    --select ALL \
    --target-version "$target_version_option_ruff" \
    $unsafe_fixes_option \
    "$@" \
    ;
exit_status=$((exit_status + $?))

uv tool run pyright \
    --pythonversion "$target_version_option" \
    "$@" \
    ;
exit_status=$((exit_status + $?))

exit "$exit_status"
